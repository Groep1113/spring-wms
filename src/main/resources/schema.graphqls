scalar LocalDate

type User {
    id: Int!
    firstName: String!
    lastName: String!
    email: String!
}

type LoginPayload {
  token: String
  user: User
}

type Item {
    id: Int!
    name: String!
    code: String!
    recommendedStock: Int!
    locations: [Location]!
    categories: [Category]!
}

type Location {
    id: Int!
    code: String!
    depth: Int!
    width: Int!
    height: Int!
    items: [Item]!
    categories: [Category]!
}

type Category {
    id: Int!
    name: String!
    items: [Item]!
    locations: [Location]!
}

type Transaction {
    id: Int!
    from: Account!
    createdDate: LocalDate!
    updateDate: LocalDate!
    deletedDate: LocalDate!
    receivedDate: LocalDate!
    locked: Boolean!
}

type TransactionRule {
    id: Int!
    amount: Int!
    plannedDate: LocalDate!
    actualDate: LocalDate!
    transaction: Transaction!
    item: Item!
}

type Account {
    id: Int!
    name: String!
}

type Balance {
    id: Int!
    amount: Int!
}

type BalanceMutation {
    id: Int!
    amount: Int!
    reason: String!
}

type Query {
    users: [User]!
    userByMail(email: String!): User
	user(id: Int!): User
	items: [Item]!
	item(id: Int!): Item
	locations: [Location]!
	location(id: Int!): Location
    categories: [Category]!
    category(id: Int!): Category
    transactions: [Transaction]!
    transaction(id: Int!): Transaction
    transactionRules: [TransactionRule]!
    transactionRule(id: Int!): TransactionRule
    accounts: [Account]!
    account(id: Int!): Account
    balances: [Balance]!
    balance(id: Int!): Balance
    balanceMutations: [BalanceMutation]!
    balanceMutation(id: Int!): BalanceMutation
}

type Mutation {
    login(email: String!, password: String!): LoginPayload

    createItem(name: String!, code: String!, recommendedStock: Int!, locationId: Int!): Item
    deleteItem(itemId: Int!): Boolean
    itemChangeLocation(itemId: Int!, locationId: Int!): Item
    itemAddCategory(itemId: Int!, categoryId: Int!): Item
    itemRemoveCategory(itemId: Int!, categoryId: Int!): Item

    createUser(firstName: String!, lastName: String!, email: String!, password: String!): User

    createLocation(code: String!, depth: Int!, width: Int!, height: Int!): Location
    deleteLocation(locationId: Int!): Boolean

    createCategory(name: String!): Category
    deleteCategory(categoryId: Int!): Boolean
    categoryChangeName(categoryId: Int!, name: String!): Category
    categoryAddLocation(categoryId: Int!, locationId: Int!): Category
    categoryRemoveLocation(categoryId: Int!, locationId: Int!): Category
}