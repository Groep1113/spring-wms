type User {
    id: Int!
    firstName: String!
    lastName: String!
    email: String!
}

type LoginPayload {
  token: String
  user: User
}

type Item {
    id: Int!
    name: String!
    code: String!
    recommendedStock: Int!
    locations: [Location]!
}

type Location {
    id: Int!
    code: String!
    depth: Int!
    width: Int!
    height: Int!
    items: [Item]!
}

type Category {
    id: Int!
    name: String!
}

type Query {
    users: [User]!
    userByMail(email: String!): User
	user(id: Int!): User
	items: [Item]!
	item(id: Int!): Item
	locations: [Location]!
	location(id: Int!): Location
    categories: [Category]!
    category(id: Int!): Category
}

type Mutation {
    login(email: String!, password: String!): LoginPayload
    createItem(name: String!, code: String!, recommendedStock: Int!, locationId: Int!): Item
    createLocation(code: String!, depth: Int!, width: Int!, height: Int!): Location
    createCategory(name: String!): Category
    itemChangeLocation(itemId: Int!, locationId: Int!): Item
    deleteItem(itemId: Int!): Boolean
    deleteLocation(locationId: Int!): Boolean
    deleteCategory(categoryId: Int!): Boolean
}